#ifndef MAZEGEN_H
#define MAZEGEN_H

// Declare the maze template
const char mazeTemplate[31][41] = {
    // Top border
    {'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '#', 'C', '#', 'C', '#', 'C', '#', 'c', '#', 'c', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', 'C', '#', '*'},
    {'*', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '#', '.', '*'},
    {'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'}
};//end mazeTemplate


//maze generator functions
void generateMaze();        //Generate the maze
void drawElement(int rowA, int colA, char cellType);   //draw the cell element
void drawMazeTemplate();

#endif // MAZEGEN_H
